/**
 * @file
 * @author  gaohui
 * @desc m1-m10任务列表操作逻辑
 * @date  2017-03-02
 * @last modified by gaohui
 * @last modified time  2017-06-12 09:23:58
 * 
 * @last modified by lixiaolong 新增M11
 * @last modified time  2017年8月18日08:55:30
 */
var detectMethod = getParameter('method');  //获取检测方法
var roleNum = lsObj.getLocalStorage('params'); //获取角色 的标识
var userBo = JSON.parse(lsObj.getLocalStorage("userBo"));   //获取useBo
var token = lsObj.getLocalStorage("token"); //获取tokens
var numberPage; //定义页码
$(function () {
    changePageStyle("../../..");
    if (detectMethod == 1 || detectMethod == 2 || detectMethod == 3 || detectMethod == 6) { //判读检测方法是否为1,2,3,6
        $('#viewGraph').css('display', 'inline-block'); //曲线图区域显示
    }
    if (detectMethod == 11 ) { //M11暂时导出检测记录不可用
        $('#exportWorkBook').css('display', 'none'); //隐藏
    }
    getPipeline("pipeName",detectMethod);   //加载管线名称下拉选
    loadDetectUserName("detectUserName");  //初始化下拉选（检测单位（人员））
    //时间插件
    $("#year").datetimepicker({
        format: 'yyyy',
        autoclose: true,
        startView: "decade",
        minView: 4,
        pickTime: false
    });
    clickSearch();
    loadTable();    //初始化Table
    setTableHeight('tb-all-task');  //设置表格高度
    //回车查询
    $("#searchForm").keydown(function() {
        if (event.keyCode == "13") { //keyCode=13是回车键
           $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" }); //刷新页面并跳转到第一页
        }
    });
    $('.more').click(function() {
        $('.more').toggleClass("active");
        $('.more_item_wrapper').toggle();
        setTableHeight('tb-all-task');
    });
    document.getElementById("lineHeight").style.height = "40px";
});

//定义网格化传入参数的值
var items = {
    "taskStatusId": '', //任务状态
}
/**
 * @desc 初始化列表信息
 * @method loadTable
 */
function loadTable() {
    var currentPageSize;    //定义当前页面大小
    var url = handleURL('/cloudlink-corrosionengineer/task/queryTaskForPage');  //对url进行权限处理
    //初始化Table
    $('#tb-all-task').bootstrapTable({
        url: url, //请求后台的URL（*）
        method: 'get', //请求方式（*）
        queryParamsType: "pageSize", //页面大小
        toolbar: "#toolbar",
        queryParams: function (params) {
            if (roleNum == 2) { //判断是否为检测账号
                if ($("#taskStatus").val() == "") {   //判断任务状态是否为空
                    params.taskStatusId = "1,2,3"; //设置任务状态为待领取，进行中，待审核
                } else {
                    params.taskStatusId = items.taskStatusId;
                }
                if ($("#detectUserName").val() == "") {   //判断检测人员账号是否为空
                    params.detectUserId = userBo.objectId;  //设置检测人员ID为登陆人员ID
                } else {
                    params.detectUserId = $("#detectUserName").val();
                }
            } else {
                params.taskStatusId = items.taskStatusId;
                params.detectUserId = $("#detectUserName").val();
            }
            numberPage = this.pageNumber;
            currentPageSize = params.pageSize;
            params.pageSize = params.pageSize; //页面大小
            params.pageNum = this.pageNumber; //当前页码
            params.detectMethod = detectMethod; //获取检测方法
            params.pipeID = $("#pipeName").val();   //获取管线ID
            params.taskName = $("#taskName").val(); //获取任务名称
            params.year = $("#year").val(); //获取年份
            params.token = token;  //获取token
            params.sortName = this.sortName;  
            params.sortOrder = this.sortOrder;  
            return params;
        },
        columns: [{
            checkbox: true,
        }, {
            field: 'sequence',
            title: getLanguageValue("No"),
            formatter: function (value, row, index) {
                return currentPageSize * (numberPage - 1) + index + 1;
            }
        }, {
            field: 'detectMethod',
            title: getLanguageValue("detectMethod"),
            width: '6%',
            formatter: function (value, row, index) {
                return 'M' + row.detectMethod;
            }
        }, {
            field: 'workOrder',
            title: getLanguageValue("workOrder"),
            // sortable: true,
            width: '12%'
        }, {
            field: 'taskName',
            title: getLanguageValue("taskName"),
            sortable: true,
            width: '12%'
        }, {
            field: 'pipelineName',
            title: getLanguageValue("pipelineName"),
            width: '12%'
        }, {
            field: 'taskStatusVal',
            title: getLanguageValue("taskStatusVal"),
            sortable: true,
            width: '8%'
        }, {
            field: 'taskProcess',
            title: getLanguageValue("taskProcess"),
            width: '5%'
        }, {
            field: 'detectUserName',
            title: getLanguageValue("detectUserName"),
            sortable: true,
            width: '15%'
        }, {
            field: 'createUserName',
            title: getLanguageValue("createUserName"),
            sortable: true,
            width: '10%'
        }, {
            field: 'createTime',
            title: getLanguageValue("createTime"),
            sortable: true,
            width:'10%',
            class: 'td-nowrap',
            formatter: function (value, row, index) {
                var createTime = (row.createTime).split(' ');
                return createTime[0];
            }
        }, {
            field: 'operation',
            title: getLanguageValue("operation"),
            width:'10%',
            formatter: function (value, row, index) {
                var e = '<a href="#" mce_href="#" title=" ' + getLanguageValue("view") +'" onclick="view(\'' + row.objectId + "\',\'" + row.taskStatus + "\',\'" + row.detectUserId+ "\',\'" + row.taskName+ '\')"><span class="glyphicon glyphicon-eye-open"></span></a> ';
                if (!judgePrivilege()) {
                    if (roleNum != 2) {
                        var d = '<a href="#" mce_href="#" title="' + getLanguageValue("edit") +'" onclick="updateTask(\'' + row.objectId + '\',\'' + row.taskStatus + '\')"><span class="glyphicon glyphicon-edit" id = "editColor"></span></a> ';
                        if (row.taskStatus == "已审核") {
                            d = '<a href="#" mce_href="#" title="' + getLanguageValue("edit") +'" onclick="updateTask(\'' + row.objectId + '\',\'' + row.taskStatus + '\')"><span class="glyphicon glyphicon-edit" style="color:#ccc"></span></a> ';
                        }

                        return e + d;
                    }
                }
                return e;
            }
        }
        ],
        onDblClickRow: function (row) {
            view(row.objectId, row.taskStatus, row.detectUserId,row.taskName);
        },
        responseHandler: function (res) { //加载服务器数据之前的处理程序，可以用来格式化数据。参数：res为从服务器请求到的数据。 
            if (res.success == 1) {
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "成功" });
                    }
                } catch (error) {

                }
                return res;
            } else {
                layer.alert(getLanguageValue("load_data_error"), {
                    title: getLanguageValue("tip_title"),
                    skin: 'self-alert'
                });
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "失败" });
                    }
                } catch (error) {

                }
            }

        }
    });
}

/**
 * @desc 新增任务
 * @method addTask
 */
function addTask() {
    uncheck("addTaskButton");   //取消按钮选中状态
    var preventDblClick = false;
    var index = layer.open ({
        type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
        title: getLanguageValue("add_task"),
        skin: 'self-iframe',
        area: ['950px', '600px'],
        btn: [getLanguageValue("submit"), getLanguageValue("cancel")],
        yes: function (index, layero) {
            if(!preventDblClick){
                preventDblClick = true;
                var windowObj = layero.find('iframe')[0].contentWindow;
                var result = windowObj.saveData();
                if (result == true) {
                    $('#tb-all-task').bootstrapTable('refresh', true);
                    layer.close(index);
                }
            }else{
                preventDblClick = false;
            }
        },
        btn2: function (index, layero) {

        },
        content: getRootPath() + "/src/html/task/specific_task/add_task.html?detectMethod=" + detectMethod
    });
    parent.layer.full(index);
};

/**
 * @desc 删除任务
 */
function deleteTask() {
    uncheck("deleteTaskButton");   //取消按钮选中状态
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length > 0) {
        var isDelte = "";
        var str = "";
        var objectIds = "";
        for (var i = 0; i < rowDate.length; i++) {
            if (rowDate[i].taskStatus == "执行中") {   //任务状态执行中
                str += getLanguageValue("taskName")+'：' + rowDate[i].taskName + getLanguageValue("task_progress") + "\n";
            }
            if (rowDate[i].taskStatus == "待审核") {  //任务状态待审核
                str += getLanguageValue("taskName")+'：' + rowDate[i].taskName + getLanguageValue("task_reviewed") + "\n";
            }
            if (rowDate[i].hasData == 1) {    //有检测数据
                isDelte += getLanguageValue("taskName")+'：' + rowDate[i].taskName + ",";
            }
            objectIds += rowDate[i].objectId + ",";
        }
        if (!isNull(isDelte)) {
            isDelte = isDelte.substring(0, isDelte.length - 1);
            isDelte += getLanguageValue("data_no_delete");
            var index = layer.alert(isDelte, {
                title: getLanguageValue("tip_title"),
                skin: 'self-alert', //按钮
            });
        } else {
            if (str != "") {
                var index = layer.confirm(str + getLanguageValue("delete_no_view"), {
                    title: getLanguageValue("tip_title"),
                    skin: 'self', //按钮
                }, function () {
                    removeTask(objectIds);
                    layer.close(index);
                });
            } else {
                var index = layer.confirm(getLanguageValue("is_delete"), {
                    title: getLanguageValue("tip_title"),
                    skin: 'self', //按钮
                }, function () {
                    removeTask(objectIds);
                    layer.close(index);
                });
            }
        }
    } else {
        layer.alert(getLanguageValue("select_one_data"), {
            title: getLanguageValue("tip_title"),
            skin: 'self'
        });
    }
};

/**
 * @desc 删除任务
 */
function removeTask(objectIds) {
    var objectId = objectIds.substring(0, objectIds.length - 1);
    var parameter = {
        "objectId": objectId
    };
    $.ajax({
        url: "/cloudlink-corrosionengineer/task/deleteTask?token=" + token,
        type: "post",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        data: JSON.stringify(parameter),
        success: function (res) {
            if (res.success == 1) {
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('删除任务', { '任务类型': 'M' + detectMethod, "结果": "成功" });
                    }
                } catch (error) {

                }
                var rows = $('#tb-all-task').bootstrapTable('getData', true);   //获取当前页的数据
                var rows1 = $('#tb-all-task').bootstrapTable('getSelections');  //获取选中的数据
                if (numberPage != 1 && rows.length == rows1.length) { //页码不是1,当前页数量等于选中数量
                    $('#tb-all-task').bootstrapTable('prevPage');   //调转到上一页
                } else {
                    $('#tb-all-task').bootstrapTable('refresh', true);//刷新数据
                }
                parent.layer.msg(getLanguageValue("delete_success"), {
                    time: MSG_DISPLAY_TIME,
                    skin: "self-msg"
                });
            } else {
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('删除任务', { '任务类型': 'M' + detectMethod, "结果": "失败" });
                    }
                } catch (error) {

                }
                parent.layer.alert(res.msg, {
                    title: getLanguageValue("tip_title"),
                    skin: 'self-alert'
                });
            }
        },
    });
}

/**
 * @desc 生成曲线图
 * @method viewGraph
 */
function viewGraph() {
    uncheck("viewGraph");   //取消按钮选中状态
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length == 1) {
      var objectId = rowDate[0].objectId;
      var taskName = rowDate[0].taskName;
    } else {
        layer.alert(getLanguageValue("select_only_one"), {
            title: getLanguageValue("tip_title"),
            skin: 'self-alert'
        });
        return;
    }
    var layer1 = layer.open ({
        type: 2,
        title: getLanguageValue("graph"),
        skin: 'self-iframe',
        area: ['950px', '600px'],
        yes: function () { },
        btn1: function (index, layero) {

        },
        content: getRootPath() + "/src/html/task/specific_task/graph_task.html?objectId=" + objectId + '&detectMethod=' + detectMethod + '&taskName=' + encodeURI(taskName)
    });
};

/**
 * @desc 导出选中任务
 * @method exportSelect
 */
function exportSelect() {
    uncheck("exportSelect");   //取消按钮选中状态
    var objectIds = "";
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length <= 0) {
        layer.alert(getLanguageValue("select_only_one"), {
            title: getLanguageValue("tip_title"),
            skin: 'self-alert'
        });
        return;
    }
    for (var i = 0; i < rowDate.length; i++) {
        if (i != rowDate.length - 1) {
            objectIds += rowDate[i].objectId + ","
        } else {
            objectIds += rowDate[i].objectId
        }
    }
    var url = '/cloudlink-corrosionengineer/task/exportTask?token=' + lsObj.getLocalStorage('token') + '&objectIds=' + objectIds + '&type=selected';
    $("#exportExcelIframe").attr("src", url);
    try {
        if (zhugeSwitch == 1) {
            zhuge.track('导出选中任务', { '任务类型': 'M' + detectMethod });
        }
    } catch (error) {

    }
};

/**
 * @desc 导出全部任务
 * @method exportAll
 */
function exportAll() {
    uncheck("exportAll");   //取消按钮选中状态
    var objectIds = "";
    rowDate = $('#tb-all-task').bootstrapTable('getData');
    if (rowDate.length <= 0) {
        layer.alert(getLanguageValue("no_export"), {
            title: getLanguageValue("tip_title"),
            skin: 'self-alert'
        });
        return;
    }

    var detectUserId = "";
    if(roleNum == 2){
        detectUserId = userBo.objectId;
    }else{
        detectUserId = $("#detectUserName").val()
    }
    var url = '/cloudlink-corrosionengineer/task/exportTask?token=' + token + '&pipeID=' + $("#pipeName").val() + '&taskName=' + $("#taskName").val() +
        '&detectMethed=' + detectMethod + '&year=' + $("#year").val() + '&taskStatus=' + items.taskStatusId + '&type=query' + '&detectUserId=' + detectUserId;
    $("#exportExcelIframe").attr("src", url);
    try {
        if (zhugeSwitch == 1) {
            zhuge.track('导出全部任务', { '任务类型': 'M' + detectMethod });
        }
    } catch (error) {

    }
}

/**
 * @desc 查看任务信息
 * @method view
 * @param {*String} objectId, taskStatus, detectUserId,taskName
 */
function view(objectId, taskStatus, detectUserId,taskName) {
    uncheck("viewTaskButton");   //取消按钮选中状态
    var preventDblClick = false;
    var btn = "";
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (objectId != null && objectId != "") {

    } else if (rowDate.length == 1) {
        objectId = rowDate[0].objectId;
        taskStatus = rowDate[0].taskStatus;
        detectUserId = rowDate[0].detectUserId;
        taskName = rowDate[0].taskName;
    } else {
        layer.alert(getLanguageValue("select_only_one"), {
            title: getLanguageValue("tip_title"),
            skin: 'self-alert'
        });
        return;
    }
    var detectUser = userBo.objectId;  //获取登录用户人员ID
    if (!judgePrivilege()) {
        if (roleNum == 2) { //登录角色是现场检测人员
            if (taskStatus == "待领取") {
                btn = [getLanguageValue("take_btn"), getLanguageValue("cancel")];
            } else if (taskStatus == "执行中") {
                btn = [getLanguageValue("submit_btn"), getLanguageValue("cancel")];
            } else {
                btn = [getLanguageValue("close_btn")];
            }

        } else {
            if (detectUser == detectUserId && taskStatus == "待领取") {  //任务检测ID与登录人员id一致 && 任务状态待领取 
                btn = ['领取任务', getLanguageValue("cancel")];
            } else if (detectUser == detectUserId && taskStatus == "执行中") {
                btn = [getLanguageValue("submit_btn"), getLanguageValue("cancel")];
            } else if (taskStatus == "待审核") {
                btn = [getLanguageValue("approval_btn"), getLanguageValue("cancel")]
            } else {
                btn = [getLanguageValue("close_btn")]
            }
        }
    } else {
        btn = [getLanguageValue("close_btn")]
    }
    var index = layer.open ({
        type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
        title: getLanguageValue("task_details_data"),
        area: ['950px', '600px'],
        skin: 'self-iframe',
        btn: btn,
        yes: function (index, layero) {
            if(!preventDblClick){
                var windowObj = layero.find('iframe')[0].contentWindow;
                if (!judgePrivilege()) {
                    if ((roleNum == 2 && taskStatus == "执行中") || (detectUser == detectUserId && taskStatus == "执行中")) {
                        //权限现场检测人员&&任务状态执行中 || 任务检测ID与登录人员id一致 && 任务状态执行中
                        parent.layer.confirm(getLanguageValue("judge_go"), { skin: 'self' }, function () {
                            $.ajax({
                                url: "/cloudlink-corrosionengineer/task/checkTaskHasData?taskId=" + objectId,
                                type: "get",
                                success: function (res) {
                                    if (res.success == 1) {
                                        if (res.hasData != false) {
                                            var result = windowObj.approved();
                                            if (result == true) {
                                                $('#tb-all-task').bootstrapTable('refresh', true);
                                            }
                                        preventDblClick = true;
                                        } else {
                                            parent.layer.alert(getLanguageValue("one_marker"), {
                                                title: getLanguageValue("tip_title"),
                                                skin: 'self-alert'
                                            });
                                        }
                                        layer.close(index);
                                    } else {

                                    }
                                }
                            })

                        })
                    } else if ((roleNum != 2 && taskStatus == "待审核")) { //权限不是现场检测人员且任务状态为待审核
                        parent.layer.confirm(getLanguageValue("judge_approve"), { skin: 'self' }, function () {
                            var result = windowObj.approved();
                            if (result == true) {
                                $('#tb-all-task').bootstrapTable('refresh', true);
                                layer.close(index);
                            }
                            preventDblClick = true;
                        })
                    } else if ((roleNum == 2 && taskStatus == "待领取") || (detectUser == detectUserId && taskStatus == "待领取")) {
                        //权限现场检测人员&&任务状态待领取 || 任务检测ID与登录人员id一致 && 任务状态待领取
                        var result = windowObj.approved();
                        if (result == true) {
                            $('#tb-all-task').bootstrapTable('refresh', true);
                            layer.close(index);
                        }
                        preventDblClick = true;
                    } else {
                        layer.close(index);
                    }
                } else {
                    layer.close(index);
                }
            }else{
                preventDblClick = false;
            }
        },

        btn2: function (index, layero) {
        },
        content: getRootPath() + "/src/html/task/specific_task/view_task.html?objectId=" + objectId + '&detectMethod=' + detectMethod + '&taskStatus=' + encodeURI(taskStatus) + '&detectUserId=' + detectUserId + '&taskName='+encodeURI(taskName)
    });
    parent.layer.full(index);
};

/**
 * @desc 修改任务
 * @method view
 * @param {*String} objectId, taskStatus
 */
function updateTask(objectId, taskStatus) {
    var preventDblClick = false;
    var taskStatusId;
    switch (taskStatus) {
        case "待领取":
            taskStatusId = "1";
            break;
        case "执行中":
            taskStatusId = "2";
            break;
        case "待审核":
            taskStatusId = "3";
            break;
        case "已审核":
            taskStatusId = "4";
            break;
    }
    if (taskStatusId == "4") {
        return;
    } else {
        var index = layer.open ({
            type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
            title: getLanguageValue("update_task"),
            area: ['950px', '600px'],
            btn: [getLanguageValue("submit"), getLanguageValue("cancel")],
            skin: 'self-iframe',
            yes: function (index, layero) {
                if(!preventDblClick){
                    preventDblClick = true;
                    var windowObj = layero.find('iframe')[0].contentWindow;
                    var result = windowObj.update();
                    if (result == true) {
                        $('#tb-all-task').bootstrapTable('refresh', true);
                        layer.close(index);
                    }
                }else{
                    preventDblClick = false;
                }
            },
            btn2: function (index, layero) { },
            content: getRootPath() + "/src/html/task/specific_task/add_task.html?objectId=" + objectId + "&taskStatus=" + taskStatusId + "&detectMethod=" + detectMethod
        });
        parent.layer.full(index);
    }
}

/**
 * @desc 导出PDF
 */
function exportWorkBook() {
    uncheck("exportWorkBook");   //取消按钮选中状态
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length > 1 || rowDate.length == 0) {
        layer.alert(getLanguageValue("select_only_one"), {
            title: getLanguageValue("tip_title"),
            skin: 'self-alert'
        });
        return;
    }
    var url = '/cloudlink-corrosionengineer/task/exportInspectionRecord?token=' + token +
        '&detectMethod=' + rowDate[0].detectMethod + '&taskId=' + rowDate[0].objectId+'&taskName='+encodeURI(rowDate[0].taskName) 
        + '&closeTime='+rowDate[0].closeTime;
    $("#exportExcelIframe").attr("src", url);
};

/**
 * @desc 根据查询条件重新加载数据
 */
$("#searchBtn").click(function(){
    $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" }); //刷新页面并跳转到第一页
});
/**
 * @desc 重置form表单
 */
$("#resetBtn").click(function() {
    document.getElementById("searchForm").reset();
    $('.selectpicker').selectpicker('val', null);
    $(".task-status .item").removeClass('active');
    $($(".task-status .item")[0]).addClass('active');
    items.taskStatusId = "";
    $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" }); //刷新页面并跳转到第一页
});

/**
 * @desc 点击按钮查询
 */
function clickSearch(){
    $(".task-status .item").click(function(){   //任务状态
        var $parent = $('.task-status');
        $parent.find(".item").removeClass('active'); //移除所有的active
        $(this).addClass('active'); //将点击按钮设置点击状态
        items.taskStatusId = $(this).attr("data-value"); //获取点击按钮的值
        $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" }); //刷新页面并跳转到第一页
    });
    $(".detect-methed .item").click(function(){ //检测方法
        var $parent = $('.detect-methed');
        $parent.find(".item").removeClass('active'); //移除所有的active
        $(this).addClass('active'); //将点击按钮设置点击状态
        items.detectMethod = $(this).attr("data-value"); //获取点击按钮的值
        $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" }); //刷新页面并跳转到第一页
    });
    $('#pipeName').on('change',function(){
        $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" });
    });
    $('#year').on('change',function(){
        $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" });
    });
    $('#detectUserName').on('change',function(){
        $('#tb-all-task').bootstrapTable('refreshOptions', { pageNumber: 1, sortName: "", sortOrder: "" });
    });

}