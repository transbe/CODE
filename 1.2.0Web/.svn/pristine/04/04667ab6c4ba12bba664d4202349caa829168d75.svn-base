/**
 * @author: gaohui
 * @date: 2017-03-02
 * @last modified by: gaohui
 * @last modified time: 2017-04-13 20:23:33
 * @file:任务逻辑
 */
// layer.js 全局配置
layer.config({
    extend: 'patch/style.css',
    skin: 'app-layer-patch',
    resize: false,
    maxmin: true,
    btnAlign: 'c'
});
var detectMethod = getParameter('method');
var roleNum = lsObj.getLocalStorage('params'); //获取角色 的标识
var userBo = JSON.parse(lsObj.getLocalStorage("userBo"));
var numberPage;
$(function() {
    // if (roleNum != 2) {
    //     $('#addButton').css('display', '');
    //     $('#deleteTaskButton').css('display', '');
    //     $('#detectUserNameSelect').css('display', '');
    //     $("#approved").css("display", "") //显示已审核
    //     $("#annual").css("display", "inherit"); //显示所属年度

    // }
    if (detectMethod == 1 || detectMethod == 2 || detectMethod == 3 || detectMethod == 6) {
        $('#graph').css('display', 'inline-block');
    }
    getPipelineSelects();
    loadSelects("detectUserName");
    // getTree();
    $("#year").datetimepicker({
        language: 'zh-CN',
        format: 'yyyy',
        autoclose: true,
        startView: "decade",
        minView: 4,
        pickTime: false
    });
    //1.初始化Table
    var oTable = new TableInit();
    oTable.Init();
    setTableHeight('tb-all-task')
});

//加载管线名称下拉选
function getPipelineSelects() {
    var token = lsObj.getLocalStorage("token");
    $.ajax({
        url: handleURL("/cloudlink-corrosionengineer/task/getPipeline?token=" + token + "&detectMethod=" + detectMethod),
        dataType: "json",
        method: "get",
        success: function(result) {
            if (result.success == 1) {
                var data = result.rows;
                var options = "<option value=''>请选择</option>";
                for (var i = 0; i < data.length; i++) {
                    options += "<option value='" + data[i].id + "'>" + data[i].text + "</option>"
                }
                var myobj = document.getElementById('pipeName');
                if (myobj.options.length == 0) {
                    $("#pipeName").html(options);
                    $('#pipeName').selectpicker('refresh');
                }
            } else {
                layer.msg("加载下拉选失败");
            }
        }
    });
}
//初始化下拉选（检测单位（人员））；
// function loadSelects() {
//     var userBo = JSON.parse(lsObj.getLocalStorage("userBo"));
//     $.ajax({
//         url: "/cloudlink-core-framework-1/user/queryList?enterpriseId=" + userBo.enterpriseId,
//         dataType: "json",
//         method: "get",
//         success: function(result) {
//             if (result.success == 1) {
//                 var data = result.rows;
//                 var options = "<option value=''>请选择</option>";
//                 for (var i = 0; i < data.length; i++) {
//                     options += "<option value='" + data[i].objectId + "'>" + data[i].userName + "</option>"
//                 }
//                 var myobj = document.getElementById('detectUserName');
//                 if (myobj.options.length == 0) {
//                     $("#detectUserName").html(options);
//                     $('#detectUserName').selectpicker('refresh');
//                 }
//                 $("#detectUserName").bind("change", function() {
//                     var detectUserName = $("#detectUserName").val();
//                     if (detectUserName == null || detectUserName == "") {
//                         $("#userName").val("");
//                     } else {
//                         for (var i = 0; i < data.length; i++) {
//                             if (detectUserName == data[i].objectId) {
//                                 $("#userName").val(data[i].account);
//                             }
//                         }
//                     }
//                 });
//             } else {
//                 layer.msg("加载下拉选失败");
//             }
//         }
//     });
// }
//初始化列表信息
var TableInit = function() {
    var oTableInit = new Object();
    //初始化Table
    oTableInit.Init = function() {
        $('#tb-all-task').bootstrapTable({
            url: handleURL('/cloudlink-corrosionengineer/task/queryTaskForPage'), //请求后台的URL（*）
            method: 'get', //请求方式（*）
            // striped: true, //使表格带有条纹
            // pagination: true, //在表格底部显示分页工具栏
            queryParamsType: "pageSize", //页面大小
            // pageList: [10, 25, 50],
            queryParams: function(params) {
               
                if (roleNum == 2) {
                    if($("#taskStatus").val() == ""){
                        params.taskStatusId = "1,2,3"
                    }else{
                        params.taskStatusId = $("#taskStatus").val();
                    }
                    if($("#detectUserName").val() == ""){
                        params.detectUserId = userBo.objectId
                    }else{
                        params.detectUserId = $("#detectUserName").val();
                    }
                }else{
                    params.taskStatusId = $("#taskStatus").val();
                    params.detectUserId = $("#detectUserName").val();
                }
                numberPage = this.pageNumber;
                params.pageSize = params.pageSize; //页面大小
                params.pageNum = this.pageNumber; //当前页码
                params.detectMethod = detectMethod
                params.pipeID = $("#pipeName").val();
                params.taskName = $("#taskName").val();
                params.year = $("#year").val();
                params.token = lsObj.getLocalStorage("token");
                return params;
            },
            toolbar: '#toolbar',
            pageSize: 10,
            clickToSelect: true,
            columns: [{
                checkbox: true,
            }, {
                field: 'objectId',
                title: 'objectId',
                align: 'center',
                visible: false,
            }, {
                field: 'sequence',
                title: '序号',
                align: 'center',
            }, {
                field: 'detectMethod',
                title: '检测方法',
                align: 'center',
                formatter: function(value, row, index) {
                    return 'M' + row.detectMethod;
                }
            }, {
                field: 'taskName',
                title: '任务名称',
                align: 'center',
            }, {
                field: 'pipelineName',
                title: '所属管线',
                align: 'center',
            }, {
                field: 'taskStatus',
                title: '任务状态',
                align: 'center',
            }, {
                field: 'taskProcess',
                title: '任务进度',
                align: 'center',
            }, {
                field: 'detectUserName',
                title: '检测单位(人员)',
                align: 'center',
            }, {
                field: 'createUserName',
                title: '创建人',
                align: 'center',
            }, {
                field: 'createTime',
                title: '创建时间',
                align: 'center',
                formatter: function(value, row, index) {
                    var createTime = (row.createTime).split(' ');
                    return createTime[0];
                }
            }, {
                field: 'operation',
                title: '操作',
                align: 'center',
                formatter: function(value, row, index) {
                    var e = '<a href="#" mce_href="#" title="查看" onclick="view(\'' + row.taskName + "\',\'" + row.objectId + "\',\'" + row.taskStatus + "\',\'" + row.detectUserId + '\')"><span class="glyphicon glyphicon-eye-open"></span></a> ';
                    if (!judgePrivilege()) {
                        if (roleNum != 2) {
                            var d = '<a href="#" mce_href="#" title="修改" onclick="edit(\'' + row.objectId + '\',\'' + row.taskStatus + '\')"><span class="glyphicon glyphicon-edit" id = "editColor"></span></a> ';
                            if (row.taskStatus == "已审核") {
                                d = '<a href="#" mce_href="#" title="修改" onclick="edit(\'' + row.objectId + '\',\'' + row.taskStatus + '\')"><span class="glyphicon glyphicon-edit" style="color:#ccc"></span></a> ';
                            }

                            return e + d;
                        }
                    }
                    return e;
                }
            }],
            onDblClickRow: function(row) {
                view(row.taskName, row.objectId, row.taskStatus, row.detectUserId);
            },
            responseHandler: function(res) { //加载服务器数据之前的处理程序，可以用来格式化数据。参数：res为从服务器请求到的数据。                
                if (res.success == 1) {
                   
                    try {
                        if (zhugeSwitch == 1) {
                            zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "成功" });
                        }
                    } catch (error) {

                    }
                    return {
                        "rows": res.rows,
                        "total": res.totalElements
                    }
                } else {
                   layer.msg("加载数据出错", {
                        skin: "self-success"
                    });
                    try {
                        if (zhugeSwitch == 1) {
                            zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "失败" });
                        }
                    } catch (error) {

                    }
                }
                return {
                    "rows": [],
                    "total": 0
                }

            },
            onLoadSuccess: function(res) {

            }
        });
    };

    return oTableInit;
};

var queryJson = { "pipeName": "", "taskName": "", "detectUserName": "", "year": "", "taskStatus": "" } //定义全局的查询条件字段

//根据添加查询数据列表
function querylist() {
    // var detectMethed = chk()
    queryJson.pipeName = $("#pipeName").val();
    queryJson.taskName = $("#taskName").val();
    queryJson.detectUserName = $("#detectUserName").val();
    queryJson.year = $("#year").val();
    queryJson.taskStatus = $("#taskStatus").val();
    token = lsObj.getLocalStorage("token");
    //var detectMethed=detectMetheds;
    /**
     * var parameter = {
            "pipeID": queryJson.pipeName,
            "taskName": queryJson.taskName,
            "detectUserId": queryJson.detectUserName,
            "year": queryJson.year,
            "taskStatusId": queryJson.taskStatus,
            "token": token,
            "detectMethod": detectMethod
        };
        $.ajax({
            type: "get",
            url: handleURL("/cloudlink-corrosionengineer/task/queryTask"),
            contentType: "application/json; charset=utf-8",
            data: parameter,
            dataType: "json",
            success: function(res) {
                if (res.success == 1) {
                    try {
                        if (zhugeSwitch == 1) {
                            zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "成功" });
                        }
                    } catch (error) {

                    }
                    var data = res.rows;
                    if (data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            data[i].number = i + 1;
                        }
                    }

                    $('#tb-all-task').bootstrapTable('load', data);
                } else {
                    // alert("错误编码 : " + res.code + "\n" + "错误信息：" + res.msg);
                    layer.confirm("错误编码 : " + res.code + "\n" + "错误信息：" + res.msg, {
                        btn: ['确定'], //按钮
                        skin: 'self'
                    });
                    try {
                        if (zhugeSwitch == 1) {
                            zhuge.track('查询任务', { '任务类型': 'M' + detectMethod, "结果": "失败" });
                        }
                    } catch (error) {

                    }
                }
            },
        });
    */
    $('#tb-all-task').bootstrapTable('refreshOptions', {pageNumber:1});

}

//新增任务
function addTask() {
    var index = parent.layer.open({
        type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
        title: '新增任务',
        area: ['950px', '600px'],
        btn: ['提交', '取消'],
        yes: function(index, layero) {
            // var iframeWin = window[layero.find('iframe')[0]['name']]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();
            var windowObj = layero.find('iframe')[0].contentWindow;
            var flag = windowObj.saveDate();
            if (flag) {
                // querylist();
                $('#tb-all-task').bootstrapTable('refresh', true);
                parent.layer.close(index);
            }
        },
        btn2: function(index, layero) {

        },
        content: getRootPath() + "/src/html/task/specific_task/add_task.html?detectMethod=" + detectMethod
    });
    parent.layer.full(index)
};
//删除任务
function deleteTask() {
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length > 0) {
        var isDelte = "";
        var str = "";
        var objectIds = "";
        for (var i = 0; i < rowDate.length; i++) {
            if (rowDate[i].taskStatus == "执行中") {
                // str += "第" + rowDate[i].number + "条任务处于待执状态" + "\n";
                str += '任务名称：' + rowDate[i].taskName + " 任务处于待执状态" + "\n";
            }
            if (rowDate[i].taskStatus == "待审核") {
                // str += "第" + rowDate[i].number + "条任务处于待审核状态" + "\n";
                str += '任务名称：' + rowDate[i].taskName + " 任务处于待审核状态" + "\n";
            }
            if (rowDate[i].hasData == 1) {
                // isDelte += "第" + rowDate[i].number + ",";
                isDelte += '任务名称：' + rowDate[i].taskName + ",";
            }
            objectIds += rowDate[i].objectId + ",";
        }
        if (isDelte != "") {
            isDelte = isDelte.substring(0, isDelte.length - 1);
            isDelte += " 已有测试数据，不能删除！"
            var index = layer.confirm(isDelte, {
                btn: ['确定'],
                skin: 'self', //按钮
            });
        } else {
            if (str != "") {
                var index = layer.confirm(str + "删除后无法查看数据", {
                    btn: ['确定', '取消'],
                    skin: 'self', //按钮
                }, function() {
                    removeTask(objectIds);
                    layer.close(index);
                    //$('#tb-all-task').bootstrapTable('load', data);
                });
            } else {
                var index = layer.confirm('是否确定删除所选项？', {
                    btn: ['确定', '取消'],
                    skin: 'self', //按钮
                }, function() {
                    skin: 'self'
                    removeTask(objectIds);
                    // querylist();
                    $('#tb-all-task').bootstrapTable('refresh', true);
                    layer.close(index);
                });
            }
        }
    } else {
        // alert("请至少选择一条数据");
        parent.layer.confirm("请至少选择一条数据", {
            btn: ['确定'], //按钮
            skin: 'self'
        });
    }
};

function removeTask(objectIds) {
    var flag = false;
    var token = lsObj.getLocalStorage("token");
    var objectId = objectIds.substring(0, objectIds.length - 1);
    var parameter = {
        "objectId": objectId
    };
    $.ajax({
        url: "/cloudlink-corrosionengineer/task/deleteTask?token=" + token,
        type: "post",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        data: JSON.stringify(parameter),
        success: function(res) {
            if (res.success == 1) {
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('删除任务', { '任务类型': 'M' + detectMethod, "结果": "成功" });
                    }
                } catch (error) {

                }
                var rows = $('#tb-all-task').bootstrapTable('getData', true);
                var rows1 = $('#tb-all-task').bootstrapTable('getSelections');
                if(numberPage != 1 && rows.length == rows1.length){
                    $('#tb-all-task').bootstrapTable('prevPage');
                }else{
                    $('#tb-all-task').bootstrapTable('refresh', true);
                }
                parent.layer.confirm("删除成功", {
                    btn: ['确定'], //按钮
                    skin: 'self'
                });
                
                flag = true;
            } else {
                try {
                    if (zhugeSwitch == 1) {
                        zhuge.track('删除任务', { '任务类型': 'M' + detectMethod, "结果": "失败" });
                    }
                } catch (error) {

                }
                parent.layer.confirm("错误信息：" + res.msg, {
                    btn: ['确定'], //按钮
                    skin: 'self'
                });
                flag = false;
            }
        },
    });
    return flag;
}

//查看
function dataCheck() {
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length != 1) {
        layer.confirm("请选择一条数据", {
            time: 0, //不自动关闭
            btn: ['确定'],
            skin: 'self'
        });
        return;
    }
    var eventId = rowDate[0].objectId
    var detectMethod = rowDate[0].detectMethod
    var index = parent.layer.open({
        type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
        title: '查看任务及检测数据',
        area: ['950px', '600px'],
        btn: ['提交', '取消'],
        yes: function(index, layero) {
            // var iframeWin = window[layero.find('iframe')[0]['name']]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();
            var windowObj = layero.find('iframe')[0].contentWindow;
            var flag = windowObj.saveDate();
            if (flag) {
                // querylist();
                $('#tb-all-task').bootstrapTable('refresh', true);
                parent.layer.close(index);
            }
        },
        btn2: function(index, layero) {

        },
        content: getRootPath() + "/src/html/task/specific_task/view_task.html?eventId=" + eventId + '&detectMethod=' + detectMethod
    });
};

function generateGraph() {
    var objectId;
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length == 1) {
        objectId = rowDate[0].objectId;
        taskName = rowDate[0].taskName;
    } else {
        layer.confirm("请选择一条数据", {
            btn: ['确定'], //按钮
            skin: 'self'
        });
        return;
    }
    var layer1 = parent.layer.open({
        type: 2,
        title: '曲线图',
        area: ['950px', '600px'],
        // btn: ['填写信息', '关闭任务', '取消'],
        yes: function() {},
        btn1: function(index, layero) {

        },
        content: getRootPath() + "/src/html/task/specific_task/graph_task.html?eventId=" + objectId + '&detectMethod=' + detectMethod + '&taskName=' + encodeURI(taskName)
    });
};

//导出选中任务
function taskExportWordCheck() {
    var objectIds = "";
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (rowDate.length <= 0) {
        layer.confirm("请选择一条数据", {
            time: 0, //不自动关闭
            btn: ['确定'],
            skin: 'self'
        });
        return;
    }
    for (var i = 0; i < rowDate.length; i++) {
        if (i != rowDate.length - 1) {
            objectIds += rowDate[i].objectId + ","
        } else {
            objectIds += rowDate[i].objectId
        }
    }
    var url = '/cloudlink-corrosionengineer/task/exportTask?token=' + lsObj.getLocalStorage('token') + '&objectIds=' + objectIds + '&type=selected';
    $("#exprotExcelIframe").attr("src", url);
    uncheck("taskExportWordCheck")
    try {
        if (zhugeSwitch == 1) {
            zhuge.track('导出选中任务', { '任务类型': 'M' + detectMethod });
        }
    } catch (error) {

    }
};

//导出全部任务
function taskExportWordAll() {
    var objectIds = "";
    rowDate = $('#tb-all-task').bootstrapTable('getData');
    if (rowDate.length <= 0) {
        layer.confirm("没有可导出的数据", {
            time: 0, //不自动关闭
            btn: ['确定'],
            skin: 'self'
        });
        return;
    }
    var url = '/cloudlink-corrosionengineer/task/exportTask?token=' + lsObj.getLocalStorage("token") + '&pipeID=' + queryJson.pipeName + '&taskName=' + queryJson.taskName +
        '&detectMethed=' + detectMethod + '&year=' + queryJson.year + '&taskStatus=' + queryJson.taskStatus + '&type=query' + '&detectUserId=' + queryJson.detectUserName;
    $("#exprotExcelIframe").attr("src", url);
    uncheck("taskExportWordAll")
    try {
        if (zhugeSwitch == 1) {
            zhuge.track('导出全部任务', { '任务类型': 'M' + detectMethod });
        }
    } catch (error) {

    }
}

//查看任务信息
function view(taskName, eventId, taskStatus, detectUserId) {
    var btn = "";
    var objectId;
    var rowDate = $('#tb-all-task').bootstrapTable('getSelections');
    if (eventId != null && eventId != "") {
        objectId = eventId;
    } else if (rowDate.length == 1) {
        objectId = rowDate[0].objectId;
        taskStatus = rowDate[0].taskStatus;
        detectUserId = rowDate[0].detectUserId;
    } else {
        //  alert("请选择一条数据");
        layer.confirm("请选择一条数据", {
            btn: ['确定', '取消'], //按钮
            skin: 'self'
        });
        return;
    }
    // var token = lsObj.getLocalStorage("token");
    var detectUser = JSON.parse(lsObj.getLocalStorage("userBo")).objectId;
    if (!judgePrivilege()) {
        if (roleNum == 2) {
            if (taskStatus == "待领取") {
                btn = ['领取任务', '取消'];
            } else if (taskStatus == "执行中") {
                btn = ['提交审核', '取消'];
            } else {
                btn = ['关闭'];
            }

        } else {
            if (detectUser == detectUserId && taskStatus == "待领取") {
                btn = ['领取任务', '取消'];
            } else if (detectUser == detectUserId && taskStatus == "执行中") {
                btn = ['提交审核', '取消'];
            } else if (taskStatus == "待审核") {
                btn = ['审核通过', '取消']
            } else {
                btn = ['关闭']
            }
        }
    }else {
        btn = ['关闭']
    }
    var index = parent.layer.open({
        type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
        title: '查看任务及检测数据',
        area: ['950px', '600px'],
        btn: btn,
        yes: function(index, layero) {
            var windowObj = layero.find('iframe')[0].contentWindow;
            if (!judgePrivilege()) {
                if ((roleNum == 2 && taskStatus == "执行中") || (detectUser == detectUserId && taskStatus == "执行中")) {
                    parent.layer.confirm('提交审核后无法继续测试，您确定提交审核吗？', { skin: 'self' }, function() {
                        $.ajax({
                            url: "/cloudlink-corrosionengineer/task/checkTaskHasData?taskId=" + objectId,
                            type: "get",
                            success: function(result) {
                                if (result.success == 1) {
                                    if (result.rows != "false") {
                                        var flag = windowObj.approved();
                                        if (flag) {
                                            $('#tb-all-task').bootstrapTable('refresh', true);
                                        }
                                    } else {
                                        parent.layer.confirm("请至少录入一个桩的检测数据", {
                                            btn: ['确定'], //按钮
                                            skin: 'self'
                                        });
                                    }
                                    parent.layer.close(index);
                                } else {

                                }
                            }
                        })

                    })
                } else if ((roleNum != 2 && taskStatus == "待审核")) {
                    parent.layer.confirm('审核通过后无法继续测试，您确定审核通过吗？', { skin: 'self' }, function() {
                        var flag = windowObj.approved();
                        if (flag) {
                            $('#tb-all-task').bootstrapTable('refresh', true);
                            parent.layer.close(index);
                        }
                    })
                } else if ((roleNum == 2 && taskStatus == "待领取") || (detectUser == detectUserId && taskStatus == "待领取")) {

                    var flag = windowObj.approved();
                    if (flag) {
                        $('#tb-all-task').bootstrapTable('refresh', true);
                        parent.layer.close(index);
                    }
                } else {
                    parent.layer.close(index);
                }
            }else{
                parent.layer.close(index);
            }
        },

        btn2: function(index, layero) {
            // $('#tb-all-task').bootstrapTable('refresh', true);    
        },
        // full:function(layero){
        //     var windowObj = layero.find('iframe')[0].contentWindow;
        //      windowObj.resize();
        // },
        // restore:function(){
        //     alert(2)
        // },
        content: getRootPath() + "/src/html/task/specific_task/view_task.html?eventId=" + objectId + '&detectMethod=' + detectMethod + '&taskStatus=' + encodeURI(taskStatus) + '&detectUserId=' + detectUserId
    });
    parent.layer.full(index)
};
//修改任务
function edit(objectId, taskStatus) {

    var taskStatusId;
    switch (taskStatus) {
        case "待领取":
            taskStatusId = "1";
            break;
        case "执行中":
            taskStatusId = "2";
            break;
        case "待审核":
            taskStatusId = "3";
            break;
        case "已审核":
            taskStatusId = "4";
            break;
    }
    if (taskStatusId == "4") {
        return;
        // alert("任务已关闭，不可修改！");
        // parent.layer.confirm("任务已关闭，不可修改！", {
        //     btn: ['确定'], //按钮
        //     skin: 'self'
        // });
    } else {
        var index = parent.layer.open({
            type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）
            title: '修改任务',
            area: ['950px', '600px'],
            btn: ['提交', '取消'],
            yes: function(index, layero) {
                // var iframeWin = window[layero.find('iframe')[0]['name']]; //得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();
                var windowObj = layero.find('iframe')[0].contentWindow;
                var flag = windowObj.update();
                if (flag) {
                    // querylist();
                    $('#tb-all-task').bootstrapTable('refresh', true);
                    parent.layer.close(index);
                }
            },
            btn2: function(index, layero) {},
            content: getRootPath() + "/src/html/task/specific_task/add_task.html?objectId=" + objectId + "&taskStatus=" + taskStatusId + "&detectMethod=" + detectMethod
        });
        parent.layer.full(index)
    }
}
//重置form表单
function clearForm() {
    document.getElementById("formSearch").reset();
    $('.selectpicker').selectpicker('val', null);
    $("#pipeName").val("");
    querylist();
}


//所属管线下拉树
var setting = {
    view: {
        dblClickExpand: false
    },
    data: {
        simpleData: {
            enable: true
        }
    },
    callback: {
        beforeClick: beforeClick,
        onClick: onClick
    }
};

function beforeClick(treeId, treeNode) {
    var check = (treeNode && !treeNode.isParent);
    // if (!check) alert("...");
    return check;
}

function onClick(e, treeId, treeNode) {
    var zTree = $.fn.zTree.getZTreeObj("taskNameTree"),
        nodes = zTree.getSelectedNodes(),
        v = "";
    nodes.sort(function compare(a, b) {
        return a.id - b.id;
    });
    for (var i = 0, l = nodes.length; i < l; i++) {
        v += nodes[i].name + ",";
    }
    if (v.length > 0) v = v.substring(0, v.length - 1);
    var pipeName = $("#pipeName");
    pipeName.attr("value", v);
    pipeName.attr("valueID", treeNode.id)
    hideMenu();
    // queryMarkCheck(treeNode.id);
}

function showMenu() {
    var leftWidth = $("#aaaa").width() + $("#aaaa").offset().left + 5;
    var topHeight = $("#aaaa").offset().top + $("#aaaa").height() + 8;
    var width = $("#pipeName").width() + 26;
    $("#menuContent").css({ left: leftWidth + "px", top: topHeight + "px" }).slideDown("fast");
    $("#taskNameTree").css({ width: width });
    $("body").bind("mousedown", onBodyDown);
}

function hideMenu() {
    $("#menuContent").fadeOut("fast");
    $("body").unbind("mousedown", onBodyDown);
}

function onBodyDown(event) {
    if (!(event.target.id == "menuBtn" || event.target.id == "menuContent" || $(event.target).parents("#menuContent").length > 0)) {
        hideMenu();
    }
}